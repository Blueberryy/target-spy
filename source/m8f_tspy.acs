#library "target-spy"
#include "zcommon.acs"

#define MINIMAL_HOLD_TIME 1873

#define msgId    191900
#define msgIdBar msgId
#define msgIdTag msgId + 1
#define msgIdNum msgId + 2
#define msgIdCrh msgId + 3

#define newline 0.03

function bool TS_TargetIsPresent(int playerN)
{
  ScriptCall("TSZScriptHelper", "TargetIsPresent");
  bool isPresent = GetUserCVar(playerN, "m8f_ts_ResultInt");
  return isPresent;
}

function int TS_GetTargetHealth(int playerN)
{
  ScriptCall("TSZScriptHelper", "GetTargetHealth");
  int targetHealth = GetUserCVar(playerN, "m8f_ts_ResultInt");
  return targetHealth;
}

function int TS_GetTargetMaxHealth(int playerN)
{
  ScriptCall("TSZScriptHelper", "GetTargetMaxHealth");
  int targetHealth = GetUserCVar(playerN, "m8f_ts_ResultInt");
  return targetHealth;
}

function str TS_GetTargetName(int playerN)
{
  ScriptCall("TSZScriptHelper", "GetTargetName");
  str targetName = GetUserCVarString(playerN, "m8f_ts_ResultString");
  return targetName;
}

function str TS_MakeHealthBar(int health, int maxHealth, int playerN)
{
  int length;
  if      (maxHealth >= 2000) { length = 30; }
  else if (maxHealth >= 500)  { length = 20; }
  else                        { length = 10; }

  int pips = health * length / maxHealth;
  if      (pips == 0)      { pips = 1; }
  else if (pips >  length) { pips = length; }

  str pip = GetUserCVarString(playerN, "m8f_ts_pip");

  str result = "";

  int i;
  for (i = 0; i < pips; ++i)
    {
      result = StrParam(s:result, s:pip);
    }
  for (; i < length; ++i)
    {
      result = StrParam(s:result, c:'-');
    }

  return result;
}

function void TS_SetupFont(int playerN)
{
  str font = GetUserCVarString(playerN, "m8f_ts_font");
  SetFont(font);
}

function void TS_DrawCrosshair(int color, int playerN)
{
  bool crosshairOn = GetUserCVar(playerN, "m8f_ts_crosshair_on");
  if (crosshairOn)
    {
      str crosshair = GetUserCVarString(playerN, "m8f_ts_crosshair");
      HudMessage(s:crosshair; HUDMSG_PLAIN, msgIdCrh, color, 0.5, 0.51, 0);
    }
  else
    {
      HudMessage(s:""; HUDMSG_PLAIN, msgIdCrh, CR_WHITE, 0.5, 0.51, 0);
    }
}

script "target-spy" ENTER
{
  int playerN = PlayerNumber();

  int colors[12] =
    {
      CR_RED,
      CR_RED,
      CR_RED,
      CR_ORANGE,
      CR_ORANGE,
      CR_ORANGE,
      CR_GOLD,
      CR_GOLD,
      CR_GOLD,
      CR_TAN,
      CR_TAN,
      CR_CYAN,
    };

  while (true)
    {
      if (!GetUserCVar(playerN, "m8f_ts_enabled")) { Delay(10); continue; }

      bool hasTarget = TS_TargetIsPresent(playerN);
      SetUserCVar(playerN, "m8f_ts_has_target", hasTarget);
      if (!hasTarget) // no target
        {
          TS_DrawCrosshair(CR_GREEN, playerN);
          Delay(5);
          continue;
        }

      int targetMaxHealth = TS_GetTargetMaxHealth(playerN);
      int minHealth = GetUserCVar(playerN, "m8f_ts_min_health");
      if (targetMaxHealth < minHealth) // not worth showing
        {
          TS_DrawCrosshair(CR_GREEN, playerN);
          Delay(5);
          continue;
        }

      int targetHealth = TS_GetTargetHealth(playerN);
      if (targetHealth < 1) // target is dead
        {
          TS_DrawCrosshair(CR_GREEN, playerN);
          Delay(5);
          continue;
        }

      int percent = targetHealth * 10 / targetMaxHealth;
      if (percent > 10) { percent = 11; }

      int color = colors[percent];
      str bar   = TS_MakeHealthBar(targetHealth, targetMaxHealth, playerN);

      if (targetHealth < 35)
        {
          color = CR_BLACK;
        }

      int y = GetUserCVar(playerN, "m8f_ts_y");
      TS_SetupFont(playerN);

      if (GetUserCVar(playerN, "m8f_ts_show_bar"))
        {
          HudMessage(s:bar;
                     HUDMSG_PLAIN, msgIdBar, color, 0.5, y, MINIMAL_HOLD_TIME);
          y += newline;
        }

      if (GetUserCVar(playerN, "m8f_ts_show_name"))
        {
          str targetName = TS_GetTargetName(playerN);
          HudMessage(s:targetName;
                     HUDMSG_PLAIN, msgIdTag, CR_WHITE, 0.5, y, MINIMAL_HOLD_TIME);
          y += newline;
        }

      if (GetUserCVar(playerN, "m8f_ts_show_numbers"))
        {
          HudMessage(i:targetHealth, s:"/", i:targetMaxHealth;
                     HUDMSG_PLAIN, msgIdNum, color, 0.5, y, MINIMAL_HOLD_TIME);
          y += newline;
        }

      TS_DrawCrosshair(color, playerN);

      Delay(1);
    }
}
